package org.hisp.dhis.importexport.ixf.mock;

/*
 * Copyright (c) 2004-2007, University of Oslo
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * * Neither the name of the HISP project nor the names of its contributors may
 *   be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import java.util.ArrayList;
import java.util.List;

import org.hisp.dhis.importexport.ixf.config.IXFConfiguration;
import org.hisp.dhis.importexport.ixf.config.IXFConfigurationManager;
import org.hisp.dhis.importexport.ixf.config.IXFCountry;

/**
 * @author Lars Helge Overland
 * @version $Id$
 */
public class MockIXFConfigurationManager
    implements IXFConfigurationManager
{
    private static final String SOURCE = "District Health Information System 2";
    private static final String SOURCE_KEY = "25E2917E-FA2A-440C-A00B-49F8E609035F";

    public IXFConfiguration getConfiguration()
    {
        IXFCountry country = new IXFCountry();
        
        country.setKey( "197" );
        country.setNumber( "710" );
        country.setName( "SOUTH AFRICA" );
        country.setLongName( "South Africa" );
        country.setIsoCode( "ZA" );
        country.setLevelNumber( "2" );
        
        List<String> levelNames = new ArrayList<String>();
        
        levelNames.add( "Country" );
        levelNames.add( "Province" );
        levelNames.add( "District" );
        levelNames.add( "Hospital" );
        levelNames.add( "Ward" );
        levelNames.add( "Facility" );
        
        IXFConfiguration config = new IXFConfiguration();
        
        config.setSource( SOURCE );
        config.setSourceKey( SOURCE_KEY );
        config.setComment( "IXF export file generated by DHIS 2" );
        config.setCountry( country );
        config.setLevelNames( levelNames );
        
        return config;
    }

    public List<IXFCountry> getCountries()
    {
        throw new UnsupportedOperationException();
    }

    public IXFCountry getCountry( String key )
    {
        throw new UnsupportedOperationException();
    }

    public void setConfiguration( IXFConfiguration configuration )
    {
        throw new UnsupportedOperationException();
    }
}
